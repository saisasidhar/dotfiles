set encoding=utf-8
set nocompatible

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
filetype off
filetype plugin indent off

set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()

Plugin 'VundleVim/Vundle.vim'
Plugin 'tpope/vim-surround'
Plugin 'airblade/vim-gitgutter'
Plugin 'easymotion/vim-easymotion'
Plugin 'tpope/vim-eunuch'
Plugin 'ludovicchabant/vim-gutentags'
Plugin 'preservim/tagbar'
Plugin 'arcticicestudio/nord-vim'
Plugin 'itchyny/lightline.vim'
Plugin 'fatih/vim-go'

call vundle#end()

filetype plugin indent on
syntax enable

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
set tabstop=4 softtabstop=4 shiftwidth=4
set expandtab autoindent smartindent
set number
set relativenumber
set numberwidth=4
set ignorecase
set smartcase
set incsearch
set hlsearch
set mouse=a
set noerrorbells
set vb t_vb=
set laststatus=2
set updatetime=1618 "Phi. GR. Sweet spot. 'cause 4 sec is too long
set listchars=eol:¬,tab:>·,trail:~,extends:>,precedes:<,space:␣
set colorcolumn=120
set splitbelow
set splitright
set showcmd
set noshowmode
set cursorline
let mapleader="\<Space>"
let &t_SI = "\<Esc>[6 q"
let &t_SR = "\<Esc>[4 q"
let &t_EI = "\<Esc>[0 q"
set ttimeout
set ttimeoutlen=1
set ttyfast

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
:command WQ wq
:command Wq wq
:command W w
:command Q q
:command Q1 q!

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
map <silent> <leader>i :set list!<CR>
map <silent> <leader>p <ESC>:set paste<CR>i
cnoremap <expr> %% expand('%:h').'/'
nnoremap \ :nohl<CR>
nnoremap <C-J> <C-W><C-J>
nnoremap <C-K> <C-W><C-K>
nnoremap <C-L> <C-W><C-L>
nnoremap <C-H> <C-W><C-H>

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
set path=.,**
set wildmenu

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
let g:netrw_banner=0
let g:netrw_winsize=24
let g:netrw_liststyle = 3
let g:netrw_browse_split = 4

let g:NetrwIsOpen=0
function! ToggleNetrw()
    if g:NetrwIsOpen
        let i = bufnr("$")
        while (i >= 1)
            if (getbufvar(i, "&filetype") == "netrw")
                silent exe "bwipeout " . i
            endif
            let i-=1
        endwhile
        let g:NetrwIsOpen=0
    else
        let g:NetrwIsOpen=1
        silent Lexplore
    endif
endfunction

noremap <silent> <C-E> :call ToggleNetrw()<CR>

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
"https://github.com/tmux/tmux/issues/1246
if (exists('+termguicolors'))
  let &t_8f = "\<Esc>[38;2;%lu;%lu;%lum"
  let &t_8b = "\<Esc>[48;2;%lu;%lu;%lum"
  set termguicolors
endif
silent! colorscheme nord
" An inactive line has only one set (RO, FN, MD) on the left. So it shifts to
" position 0 and uses the highlight color. Fixes the inconsistent behavior
silent! let g:lightline = {
  \ 'colorscheme': 'nord',
  \ 'inactive': {
  \    'left': [ [ 'placeholder' ],
  \              [ 'readonly', 'filename', 'modified' ] ]
  \ },
  \ 'component': {
  \   'placeholder' : ''
  \ },
  \ }

" Custom colors remapped in existing nord theme
highlight Keyword guifg=#D08770 gui=NONE ctermfg=117 cterm=NONE
highlight Statement guifg=#D08770 gui=NONE ctermfg=117 cterm=NONE
highlight Function guifg=#88C0D0 gui=NONE ctermfg=117 cterm=NONE
highlight Type guifg=#81A1C1 gui=NONE ctermfg=117 cterm=NONE

" Syntax under carret. Useful for debugging 
function! SynStack()
  if !exists("*synstack")
    return
  endif
  echo map(synstack(line('.'), col('.')), 'synIDattr(v:val, "name")')
endfunc
command! Syn call SynStack()

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
set autowrite " saves before running make
" https://vim.fandom.com/wiki/Automatically_open_the_quickfix_window_on_:make
autocmd QuickFixCmdPost [^l]* nested cwindow
autocmd QuickFixCmdPost    l* nested lwindow
nnoremap <F10> :make<CR><CR>
nnoremap <C-N> :cnext<CR>
nnoremap <C-P> :cprevious<CR>
nnoremap <C-C> :cclose<CR>

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" set statusline+=%{gutentags#statusline()}
let g:gutentags_project_root = ['.git', 'pyproject.toml', 'requirements.txt', 'package.json', 'go.mod']
let g:gutentags_file_list_command = {
  \ 'markers': {
  \   'pyproject.toml': expand('~/.vim/gen_file_list_for_gutentags') . ' ///absolute'
  \ }
  \}
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
autocmd FileType gitcommit setlocal spell
